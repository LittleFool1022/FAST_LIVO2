<?xml version="1.0"?>
<launch>
    <!-- ========== Direct Mapping System ========== -->
    <!-- Based on stable FAST-LIO output with simplified architecture -->
    <!-- Optimized for 25cm LiDAR height and obstacle avoidance -->

    <!-- Arguments for configuration -->
    <arg name="use_simple_mapping" default="true"/>
    <arg name="enable_rviz" default="false"/>
    <arg name="enable_teleop" default="false"/>
    <arg name="enable_map_saver" default="false"/>
    <arg name="lidar_height" default="0.25"/>
    <arg name="obstacle_min_height" default="0.01"/>

    <!-- 1. Enhanced 2D Map Generator: Using optimized simple_2d_mapping approach -->
    <node pkg="fast_livo_nav" type="simple_2d_mapping.py" name="enhanced_2d_mapping" output="screen" if="$(arg use_simple_mapping)">
        <!-- LiDAR and obstacle detection parameters -->
        <param name="lidar_height" value="$(arg lidar_height)"/>
        <param name="obstacle_min_height" value="$(arg obstacle_min_height)"/>
        <param name="ground_height_tolerance" value="0.05"/>

        <!-- Map parameters -->
        <param name="map_resolution" value="0.05"/>
        <param name="map_size" value="50"/>
        <param name="max_range" value="25.0"/>
        <param name="min_range" value="0.05"/>
        <param name="min_height" value="-0.4"/>
        <param name="max_height" value="3.0"/>

        <!-- Obstacle detection sensitivity -->
        <param name="obstacle_threshold" value="0.3"/>
        <param name="free_threshold" value="0.15"/>
        <param name="min_points_for_occupied" value="1"/>
    </node>

    <!-- Fallback: Direct mapping for comparison -->
    <node pkg="fast_livo_nav" type="direct_mapping.py" name="direct_mapping" output="screen" unless="$(arg use_simple_mapping)"/>

    <!-- 2. TF Transform: map -> camera_init -->
    <!-- FAST-LIO provides stable camera_init -> aft_mapped transform -->
    <!-- We establish map -> base_link connection -->
    <node pkg="tf" type="static_transform_publisher" name="map_to_camera_init"
          args="0 0 0 0 0 0 map camera_init 100"/>

    <!-- 3. Map Saver (Optional) -->
    <node pkg="map_server" type="map_saver" name="enhanced_map_saver" output="screen"
          args="-f $(env HOME)/catkin_ws/maps/enhanced_map" if="$(arg enable_map_saver)">
        <remap from="map" to="/map"/>
    </node>

    <!-- 4. Manual Control Interface -->
    <!-- Keyboard control node for manual testing -->
    <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_keyboard"
          output="screen" if="$(arg enable_teleop)">
        <remap from="cmd_vel" to="/teleop_cmd_vel"/>
    </node>

    <!-- 5. cmd_vel to Serial Bridge -->
    <node pkg="fast_livo_nav" type="cmdvel_to_serial.py" name="cmdvel_to_serial" output="screen">
        <param name="serial_port" value="/dev/ttyUSB0"/>
        <param name="baudrate" value="115200"/>
        <param name="max_rpm" value="50"/>
    </node>

    <!-- 6. Simple Odometry (provides odom -> base_link transform) -->
    <node pkg="fast_livo_nav" type="simple_odometry.py" name="simple_odometry" output="screen"/>

    <!-- 7. RViz Visualization -->
    <node pkg="rviz" type="rviz" name="rviz"
          args="-d $(find fast_livo)/rviz_cfg/mapping.rviz" if="$(arg enable_rviz)"/>

    <!-- Debug Information -->
    <node pkg="rostopic" type="rostopic" name="map_info_monitor"
          args="echo /map/info" output="screen" respawn="false" if="false"/>

    <!-- Performance Monitor -->
    <node pkg="fast_livo_nav" type="monitor_mapping_performance.py" name="mapping_performance_monitor"
          output="screen" if="false"/>
</launch>
